{"_id":"react-prop-types","_rev":"8-f08eb836bd874b85314e1c36b1c54be2","name":"react-prop-types","description":"React PropType Utilities","dist-tags":{"latest":"0.3.0"},"versions":{"0.0.0":{"name":"react-prop-types","version":"0.0.0","description":"React PropType Utilities","main":"lib/index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","gitHead":"22bd478f95d054991c4717d049236bed5127dc2a","_id":"react-prop-types@0.0.0","_shasum":"99458637ff1c36ae8eed43fa23ae1327bd17e6de","_from":".","_npmVersion":"2.11.0","_nodeVersion":"2.2.1","_npmUser":{"name":"mtscout6","email":"mtscout6@gmail.com"},"maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"}],"dist":{"shasum":"99458637ff1c36ae8eed43fa23ae1327bd17e6de","tarball":"http://registry.npmjs.org/react-prop-types/-/react-prop-types-0.0.0.tgz"},"directories":{}},"0.2.0":{"name":"react-prop-types","version":"0.2.0","description":"React PropType Utilities","main":"lib/index.js","files":["LICENSE","README.md","lib"],"scripts":{"build":"rm -rf lib && babel src --out-dir lib","lint":"eslint .","test":"npm run lint && karma start --single-run","tdd":"karma start","coverage":"COVERAGE=true karma start --single-run","patch":"release patch","minor":"release minor","major":"release major"},"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"bowerRepo":"git@github.com:react-bootstrap/react-prop-types-bower.git","keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","devDependencies":{"babel":"^5.6.14","babel-core":"^5.6.15","babel-eslint":"^3.1.20","babel-loader":"^5.3.0","chai":"^3.0.0","es5-shim":"^4.1.7","eslint":"^0.24.0","eslint-plugin-babel":"^1.0.0","eslint-plugin-mocha":"^0.4.0","isparta-loader":"^0.2.0","karma":"^0.12.37","karma-chai":"^0.1.0","karma-chrome-launcher":"^0.2.0","karma-cli":"^0.1.0","karma-coverage":"^0.4.2","karma-coveralls":"^1.1.0","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.0.2","karma-sinon":"^1.0.4","karma-sinon-chai":"^1.0.0","karma-sourcemap-loader":"^0.3.5","karma-webpack":"^1.5.1","mocha":"^2.2.5","mt-changelog":"^0.5.3","node-libs-browser":"^0.5.2","react":"^0.13.3","release-script":"^0.1.1","sinon":"^1.15.4","sinon-chai":"^2.8.0","webpack":"^1.10.1","yargs":"^3.14.0"},"gitHead":"655c6af36d17921473c6fda10c33275b2cec0fa0","_id":"react-prop-types@0.2.0","_shasum":"8c9880ee7b63ad32a32dacb52583ba545e537cb3","_from":".","_npmVersion":"2.13.0","_nodeVersion":"0.12.5","_npmUser":{"name":"taion","email":"tesrin@gmail.com"},"dist":{"shasum":"8c9880ee7b63ad32a32dacb52583ba545e537cb3","tarball":"http://registry.npmjs.org/react-prop-types/-/react-prop-types-0.2.0.tgz"},"maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"taion","email":"tesrin@gmail.com"}],"directories":{}},"0.2.1":{"name":"react-prop-types","version":"0.2.1","description":"React PropType Utilities","main":"lib/index.js","files":["LICENSE","README.md","lib"],"scripts":{"build":"rm -rf lib && babel src --out-dir lib","lint":"eslint .","test":"npm run lint && karma start --single-run","tdd":"karma start","coverage":"COVERAGE=true karma start --single-run","patch":"release patch","minor":"release minor","major":"release major"},"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","devDependencies":{"babel":"^5.6.14","babel-core":"^5.6.15","babel-eslint":"^3.1.20","babel-loader":"^5.3.0","chai":"^3.0.0","es5-shim":"^4.1.7","eslint":"^0.24.0","eslint-plugin-babel":"^1.0.0","eslint-plugin-mocha":"^0.4.0","isparta-loader":"^0.2.0","karma":"^0.12.37","karma-chai":"^0.1.0","karma-chrome-launcher":"^0.2.0","karma-cli":"^0.1.0","karma-coverage":"^0.4.2","karma-coveralls":"^1.1.0","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.0.2","karma-sinon":"^1.0.4","karma-sinon-chai":"^1.0.0","karma-sourcemap-loader":"^0.3.5","karma-webpack":"^1.5.1","mocha":"^2.2.5","mt-changelog":"^0.5.3","node-libs-browser":"^0.5.2","react":"^0.13.3","release-script":"^0.1.1","sinon":"^1.15.4","sinon-chai":"^2.8.0","webpack":"^1.10.1","yargs":"^3.14.0"},"gitHead":"2a296654535f22b2fcbf2b39c79ec2e762076cbe","_id":"react-prop-types@0.2.1","_shasum":"8f0e7e2d3d1e2a7242a47710929f8036c01205c2","_from":".","_npmVersion":"2.13.0","_nodeVersion":"0.12.5","_npmUser":{"name":"taion","email":"tesrin@gmail.com"},"dist":{"shasum":"8f0e7e2d3d1e2a7242a47710929f8036c01205c2","tarball":"http://registry.npmjs.org/react-prop-types/-/react-prop-types-0.2.1.tgz"},"maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"taion","email":"tesrin@gmail.com"}],"directories":{}},"0.2.2":{"name":"react-prop-types","version":"0.2.2","description":"React PropType Utilities","main":"lib/index.js","files":["LICENSE","README.md","lib"],"scripts":{"build":"rm -rf lib && babel src --out-dir lib","lint":"eslint .","test":"npm run lint && karma start --single-run","tdd":"karma start","coverage":"COVERAGE=true karma start --single-run","patch":"release patch","minor":"release minor","major":"release major"},"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","devDependencies":{"babel":"^5.6.14","babel-core":"^5.6.15","babel-eslint":"^4.0.5","babel-loader":"^5.3.0","chai":"^3.0.0","es5-shim":"^4.1.7","eslint":"^1.0.0","eslint-config-airbnb":"0.0.7","eslint-plugin-babel":"^2.0.0","eslint-plugin-mocha":"^0.4.0","eslint-plugin-react":"^3.2.3","isparta-loader":"^0.2.0","karma":"^0.13.7","karma-chrome-launcher":"^0.2.0","karma-cli":"^0.1.0","karma-coverage":"^0.5.0","karma-coveralls":"^1.1.0","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.0.2","karma-sinon-chai":"^1.0.0","karma-sourcemap-loader":"^0.3.5","karma-webpack":"^1.5.1","mocha":"^2.2.5","mt-changelog":"^0.6.1","node-libs-browser":"^0.5.2","react":"^0.13.3","release-script":"^0.2.1","sinon":"^1.15.4","sinon-chai":"^2.8.0","webpack":"^1.10.1","yargs":"^3.14.0"},"dependencies":{"warning":"^2.0.0"},"gitHead":"4338e28fc832b3635f33a24d760ffdb83ae82168","_id":"react-prop-types@0.2.2","_shasum":"ae49914d4952382113d0e210b2e51016f0bd7f19","_from":".","_npmVersion":"2.14.0","_nodeVersion":"0.12.7","_npmUser":{"name":"taion","email":"tesrin@gmail.com"},"dist":{"shasum":"ae49914d4952382113d0e210b2e51016f0bd7f19","tarball":"http://registry.npmjs.org/react-prop-types/-/react-prop-types-0.2.2.tgz"},"maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"taion","email":"tesrin@gmail.com"}],"directories":{}},"0.3.0":{"name":"react-prop-types","version":"0.3.0","description":"React PropType Utilities","main":"lib/index.js","files":["LICENSE","README.md","lib"],"scripts":{"build":"rm -rf lib && babel src --out-dir lib","lint":"eslint .","test":"npm run lint && karma start --single-run","tdd":"karma start","coverage":"COVERAGE=true karma start --single-run","patch":"release patch","minor":"release minor","major":"release major"},"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"license":"MIT","bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","devDependencies":{"babel":"^5.6.14","babel-core":"^5.6.15","babel-eslint":"^4.0.5","babel-loader":"^5.3.0","chai":"^3.0.0","es5-shim":"^4.1.7","eslint":"^1.0.0","eslint-config-airbnb":"0.0.7","eslint-plugin-babel":"^2.0.0","eslint-plugin-mocha":"^0.4.0","eslint-plugin-react":"^3.2.3","isparta-loader":"^0.2.0","karma":"^0.13.7","karma-chrome-launcher":"^0.2.0","karma-cli":"^0.1.0","karma-coverage":"^0.5.0","karma-coveralls":"^1.1.0","karma-mocha":"^0.2.0","karma-mocha-reporter":"^1.0.2","karma-sinon-chai":"^1.0.0","karma-sourcemap-loader":"^0.3.5","karma-webpack":"^1.5.1","mocha":"^2.2.5","mt-changelog":"^0.6.1","node-libs-browser":"^0.5.2","react":"^0.13.3","release-script":"^0.2.1","sinon":"^1.15.4","sinon-chai":"^2.8.0","webpack":"^1.10.1","yargs":"^3.14.0"},"dependencies":{"warning":"^2.0.0"},"gitHead":"23b39fb586a941c2da0186c103ec23d63fd9ca4d","_id":"react-prop-types@0.3.0","_shasum":"4309b5ec6a7766006ee5495b7de0f412b7b96945","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"taion","email":"tesrin@gmail.com"},"dist":{"shasum":"4309b5ec6a7766006ee5495b7de0f412b7b96945","tarball":"http://registry.npmjs.org/react-prop-types/-/react-prop-types-0.3.0.tgz"},"maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"taion","email":"tesrin@gmail.com"}],"directories":{}}},"readme":"# react-prop-types\n\n[![Travis Build Status][build-badge]][build]\n\nThis is a library of some custom validators for React components properties.\nInitially they were part of the [React-Bootstrap](https://github.com/react-bootstrap/react-bootstrap/) project.\n\n### Usage\n\nAll validators can be imported as\n```js\nimport elementType from 'react-prop-types/elementType';\n// or\nimport { elementType } from 'react-prop-types';\n...\npropTypes: {\n  someProp: elementType\n```\nor\n```js\nimport CustomPropTypes from 'react-prop-types';\n// and then used as usual\npropTypes: {\n  someProp: CustomPropTypes.elementType\n```\n\nIf you use `webpack` and only want to bundle the validators you need, prefer the following approach:\n```js\nimport elementType from 'react-prop-types/elementType'\n```\n\n---\n#### all(...arrayOfValidators)\n\nThis validator allows to have complex validation like this:\n```js\npropTypes: {\n  vertical:  React.PropTypes.bool,\n  /**\n   * Display block buttons, only useful when used with the \"vertical\" prop.\n   * @type {bool}\n   */\n  block: CustomPropTypes.all(\n    React.PropTypes.bool,\n    function(props, propName, componentName) {\n      if (props.block && !props.vertical) {\n        return new Error('The block property requires the vertical property to be set to have any effect');\n      }\n    }\n  )\n```\n\nAll validators will be validated one by one, stopping on the first failure.\n\nThe `all()` validator will only succeed when all validators provided also succeed.\n\n---\n#### elementType\n\nChecks whether a property provides a type of element.\nThe type of element can be provided in two forms:\n- tag name (string)\n- a return value of `React.createClass(...)`\n\nExample\n```js\npropTypes: {\n  componentClass: CustomPropTypes.elementType\n```\nThen, `componentClass` can be set by doing:\n```js\n<Component componentClass='span' />\n```\nor\n```js\nconst Button = React.createClass(...);\n...\n<Component componentClass={Button} />\n```\n\n---\n#### isRequiredForA11y(requiredType)\n\nThis is kind of `React.PropTypes.<type>.isRequired` with the custom error message:\n`The prop <propName> is required for users using assistive technologies`\n\nExample\n```js\npropTypes: {\n  /**\n   * An html id attribute, necessary for accessibility\n   * @type {string}\n   * @required\n   */\n  id: CustomPropTypes.isRequiredForA11y(React.PropTypes.string)\n```\n\n---\n#### keyOf(object)\n\nChecks whether provided string value is one of provided object's keys.\n\nExample\n```js\nconst SIZES = {\n  'large': 'lg',\n  'small': 'sm'\n}\n\npropTypes: {\n  size: CustomPropTypes.keyOf(SIZES)\n}\n\n// this validates OK\n<Component size=\"large\" />\n\n// this throws the error `expected one of [\"large\", \"small\"]`\n<Component size=\"middle\" />\n```\n\nA more extended example\n```js\nconst styleMaps = {\n  CLASSES: {\n    'alert': 'alert',\n    'button': 'btn'\n  ...\n  SIZES: {\n    'large': 'lg',\n    'medium': 'md',\n    'small': 'sm',\n    'xsmall': 'xs'\n  }\n...\npropTypes: {\n  /**\n   * bootstrap className\n   * @private\n   */\n  bsClass: CustomPropTypes.keyOf(styleMaps.CLASSES),\n  /**\n   * Style variants\n   * @type {(\"default\"|\"primary\"|\"success\"|\"info\"|\"warning\"|\"danger\"|\"link\")}\n   */\n  bsStyle: CustomPropTypes.keyOf(styleMaps.STYLES),\n  /**\n   * Size variants\n   * @type {(\"xsmall\"|\"small\"|\"medium\"|\"large\")}\n   */\n  bsSize: CustomPropTypes.keyOf(styleMaps.SIZES)\n}\n```\n\n---\n#### mountable\n\nChecks whether a prop provides a DOM element\nThe element can be provided in two forms:\n- Directly passed\n- Or passed an object that has a `render` method\n\nExample\n```js\npropTypes: {\n  modal: React.PropTypes.node.isRequired,\n  /**\n   * The DOM Node that the Component will render it's children into\n   */\n  container: CustomPropTypes.mountable\n```\n\nA variant of usage `<Overlay container={this}>`\n```js\nconst Example = React.createClass({\n  getInitialState(){ return { show: true } },\n  toggle(){ this.setState({ show: !this.state.show }) },\n\n  render(){\n    const tooltip = <Tooltip>Tooltip overload!</Tooltip>;\n\n    return (\n      <div>\n        <Button ref='target' onClick={this.toggle}>\n          Click me!\n        </Button>\n\n        <Overlay container={this}>\n          { tooltip }\n        </Overlay>\n      </div>\n    );\n  }\n});\n\nReact.render(<Example/>, mountNode);\n```\n\n---\n#### singlePropFrom(...propertyNames)\n\nUsed when it needs to assure that only one of properties can be used.\n\nImagine we need the `value` for our `ButtonInput` component could be set\nby only one of two ways:\n- through `children`\n- through `value` preperty\nBut not both.\n\nLike this:\n```js\n<ButtonInput> ButtonValue </ButtonInput>\n```\nor\n```js\n<ButtonInput value=\"ButtonValue\" />\n```\n\nBut this should throw the `only one of the following may be provided` error\n```js\n<ButtonInput value=\"ButtonValue\"> SomeChildren </ButtonInput>\n```\n\nThe possible solution\n```js\nimport { singlePropFrom } from 'react-prop-types/singlePropFrom';\n\nconst typeList = [React.PropTypes.number, React.PropTypes.string];\n\nfunction childrenValueValidation(props, propName, componentName) {\n  let error = singlePropFrom('children', 'value')(props, propName, componentName);\n  if (!error) {\n    const oneOfType = React.PropTypes.oneOfType(typeList);\n    error = oneOfType(props, propName, componentName);\n  }\n  return error;\n}\n\n...\n\nButtonInput.propTypes = {\n  children: childrenValueValidation,\n  value: childrenValueValidation\n```\n\n---\n#### deprecated(propType, explanation)\n\nHelps with properties deprecations\n\nExample\n```js\npropTypes: {\n  collapsable: deprecated(React.PropTypes.bool, 'Use \"collapsible\" instead.')\n```\n\nIn development mode it will write to the development console of a browser:\n```\n\"collapsable\" property of \"ComponentName\" has been deprecated.\nUse \"collapsible\" instead.\n```\n\n_Notice: this custom validator uses 'warning' package under the hood.\nAnd this package uses `console.error` channel instead of `console.warn`._\n\n[build-badge]: https://travis-ci.org/react-bootstrap/react-prop-types.svg?branch=master\n[build]: https://travis-ci.org/react-bootstrap/react-prop-types\n","maintainers":[{"name":"mtscout6","email":"mtscout6@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"taion","email":"tesrin@gmail.com"}],"time":{"modified":"2015-09-10T19:23:30.708Z","created":"2015-06-03T14:51:45.231Z","0.0.0":"2015-06-03T14:51:45.231Z","0.2.0":"2015-07-12T16:01:54.392Z","0.2.1":"2015-07-12T16:05:07.172Z","0.2.2":"2015-08-21T19:22:59.602Z","0.3.0":"2015-09-10T19:23:30.708Z"},"homepage":"https://github.com/react-bootstrap/react-prop-types#readme","keywords":["react","react-proptype","react-proptypes","react-prop-type","react-prop-types","react-component","ecosystem-react"],"repository":{"type":"git","url":"git+https://github.com/react-bootstrap/react-prop-types.git"},"author":{"name":"Matthew L Smith","email":"mtscout6@gmail.com"},"bugs":{"url":"https://github.com/react-bootstrap/react-prop-types/issues"},"license":"MIT","readmeFilename":"README.md","users":{"alexkval":true},"_attachments":{}}