{"_id":"node-static-alias","_rev":"12-78f694424472cff9686c5185eb3b6775","name":"node-static-alias","description":"Serve static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)","dist-tags":{"latest":"0.1.3"},"versions":{"0.1.0":{"name":"node-static-alias","description":"Serve static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)","version":"0.1.0","homepage":"https://github.com/anseki/node-static-alias","author":{"name":"anseki"},"repository":{"type":"git","url":"git://github.com/anseki/node-static-alias.git"},"bugs":{"url":"https://github.com/anseki/node-static-alias/issues"},"licenses":[{"type":"MIT","url":"https://github.com/anseki/node-static-alias/blob/master/LICENSE-MIT"}],"main":"./lib/node-static-alias.js","engines":{"node":">= 0.8.0"},"dependencies":{"node-static":"~0.7.2"},"keywords":["http","static","file","server","alias","mod_rewrite","directoryindex","min","log"],"_id":"node-static-alias@0.1.0","dist":{"shasum":"2c4419655178804c5c12cb542c03ba8ed58bf331","tarball":"http://registry.npmjs.org/node-static-alias/-/node-static-alias-0.1.0.tgz"},"_resolved":"c:\\DOCUME~1\\Admin\\LOCALS~1\\Temp\\npm-2208-SRUwOQH9\\1388329065687-0.3270332692191005\\tmp.tgz","_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"anseki","email":"AnSeki.aff@gmail.com"},"maintainers":[{"name":"anseki","email":"AnSeki.aff@gmail.com"}],"directories":{}},"0.1.1":{"name":"node-static-alias","description":"Serve static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)","version":"0.1.1","homepage":"https://github.com/anseki/node-static-alias","author":{"name":"anseki"},"repository":{"type":"git","url":"git://github.com/anseki/node-static-alias.git"},"bugs":{"url":"https://github.com/anseki/node-static-alias/issues"},"licenses":[{"type":"MIT","url":"https://github.com/anseki/node-static-alias/blob/master/LICENSE-MIT"}],"main":"./lib/node-static-alias.js","engines":{"node":">= 0.8.0"},"dependencies":{"node-static":"~0.7.2"},"keywords":["http","httpd","test","static","file","server","alias","mod_rewrite","directoryindex","min","log"],"_id":"node-static-alias@0.1.1","dist":{"shasum":"610e040e28311d9d82f660e94bdf38dfe7922ff0","tarball":"http://registry.npmjs.org/node-static-alias/-/node-static-alias-0.1.1.tgz"},"_resolved":"c:\\DOCUME~1\\Admin\\LOCALS~1\\Temp\\npm-2456-MUj4KmL-\\1403826863811-0.8709786210674793\\tmp.tgz","_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"anseki","email":"AnSeki.aff@gmail.com"},"maintainers":[{"name":"anseki","email":"AnSeki.aff@gmail.com"}],"directories":{}},"0.1.2":{"name":"node-static-alias","version":"0.1.2","title":"node-static-alias","description":"Serve static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)","keywords":["http","httpd","test","static","file","server","alias","mod_rewrite","directoryindex","min","log"],"main":"./lib/node-static-alias.js","engines":{"node":">= 0.8.0"},"dependencies":{"node-static":"~0.7.2"},"homepage":"https://github.com/anseki/node-static-alias","repository":{"type":"git","url":"git://github.com/anseki/node-static-alias.git"},"bugs":{"url":"https://github.com/anseki/node-static-alias/issues"},"licenses":"MIT","author":{"name":"anseki","url":"https://github.com/anseki"},"gitHead":"6d12fe11b0e7b335fd62decf3c6e681707f02748","_id":"node-static-alias@0.1.2","scripts":{},"_shasum":"b86956b92dd3f4291d35bd63af536b32224c3c04","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"anseki","email":"AnSeki.aff@gmail.com"},"maintainers":[{"name":"anseki","email":"AnSeki.aff@gmail.com"}],"dist":{"shasum":"b86956b92dd3f4291d35bd63af536b32224c3c04","tarball":"http://registry.npmjs.org/node-static-alias/-/node-static-alias-0.1.2.tgz"},"directories":{}},"0.1.3":{"name":"node-static-alias","version":"0.1.3","title":"node-static-alias","description":"Serve static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)","keywords":["http","httpd","test","static","file","server","alias","mod_rewrite","directoryindex","min","log"],"main":"./lib/node-static-alias.js","engines":{"node":">= 0.8.0"},"dependencies":{"node-static":"~0.7.2"},"homepage":"https://github.com/anseki/node-static-alias","repository":{"type":"git","url":"git://github.com/anseki/node-static-alias.git"},"bugs":{"url":"https://github.com/anseki/node-static-alias/issues"},"license":"MIT","author":{"name":"anseki","url":"https://github.com/anseki"},"gitHead":"d7b484009d53140b4f56a5f3df14d2de180a9aae","_id":"node-static-alias@0.1.3","scripts":{},"_shasum":"6088c0dfd06984d0e37bdf19ce489c4e3399997a","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"anseki","email":"AnSeki.aff@gmail.com"},"maintainers":[{"name":"anseki","email":"AnSeki.aff@gmail.com"}],"dist":{"shasum":"6088c0dfd06984d0e37bdf19ce489c4e3399997a","tarball":"http://registry.npmjs.org/node-static-alias/-/node-static-alias-0.1.3.tgz"},"directories":{}}},"readme":"# node-static-alias\n\nServe static file which is not requested file. (e.g. `file.min.js` is requested, serve `file.js`)  \nnode-static-alias wraps (inherits) the useful module [node-static](https://github.com/cloudhead/node-static/), and this adds the [`alias`](#alias) option to that.  \nThis works like the [Alias](http://httpd.apache.org/docs/2.4/mod/mod_alias.html) mapping or the [mod_rewrite\n](http://httpd.apache.org/docs/2.4/mod/mod_rewrite.html) of Apache. It looks like [DirectoryIndex](http://httpd.apache.org/docs/2.4/mod/mod_dir.html#directoryindex) too. And this can check the file exists or not.\n\n+ Serve `file.js` instead of `file.min.js` which is not made yet, in the test phase.\n+ Serve the outside files of the document-root which are shared by multiple web sites in one machine.\n+ Serve the default page which is not `index.html` when *`/` is requested.\n\n## Synopsis\n\n```js\nvar staticAlias = require('node-static-alias');\n\n// Document-Root: './public' directory\nvar fileServer = new staticAlias.Server('./public', {\n  alias: {\n    match: '/path/to/file.min.js',\n    serve: '/path/to/file.js'\n  }\n});\n\nrequire('http').createServer(function(request, response) {\n  request.addListener('end', function() {\n    fileServer.serve(request, response);\n  }).resume();\n}).listen(8080);\n```\n\n## Usage\n\nThe [`alias`](#alias) option is added to the node-static via using `require('node-static-alias')` instead of `require('node-static')`. See [node-static](https://github.com/cloudhead/node-static/) to use it.\n\n### `alias`\n\nThe `alias` included in the constructor options is an Alias-Rule Object, or an array which includes multiple Alias-Rule Objects.\n\n```js\n  alias: {\n    match: /file\\.min\\.(?:js|css)$/,\n    serve: '/path/to/file.<% suffix %>'\n  }\n```\n\nOr\n\n```js\n  alias: [\n    {\n      match: '/path/to/file.min.js',\n      serve: '/path/to/file.js'\n    },\n    {\n      match: 'suffix=png',\n      serve: '../outer/<% fileName %>',\n      allowOutside: true\n    }\n  ]\n```\n\nThe Alias-Rule Object can have following properties.\n\n### `match`\n\n**Type:** string, RegExp, function or Array\n\nSpecify one of below or an Array which includes multiple things of those.  \nIf one or more things match, the [`serve`](#serve) is parsed. If anything doesn't match, it goes to next an Alias-Rule. If all Alias-Rules don't match, it tries to serve the requested file.\n\n+ **string:**\n\nIf the requested path is equal to this string, it's matched.  \nOr, this can be `parameter=value` format (e.g. `suffix=png`). See [Parameters](#parameters). If the `value` is equal to the specified parameter, it's matched.\n\n```js\n  alias: [\n    {\n      match: '/path/to/file.min.js',\n      serve: '/path/to/file.js'\n    },\n    // Image files are not made yet.\n    {\n      match: 'suffix=png',\n      serve: '/path/to/dummy.png'\n    }\n  ]\n```\n\n+ **RegExp:**\n\nThe RegExp which tests the requested path.\n\n```js\n  // These image files are not made yet.\n  alias: {\n    match: /\\/(?:foo|bar)\\.png$/,\n    serve: '/path/to/dummy.png'\n  }\n```\n\n+ **function:**\n\nThe function which returns `true` or `false`.\nThe Object which has parameters is passed to this function. See [Parameters](#parameters).\n\n```js\n  // Kick direct access from outside web site.\n  alias: {\n    match: function(params) {\n      return params.suffix === 'jpg' &&\n        params.referer.indexOf('http://mysite.com/') !== 0;\n    },\n    serve: '/path/to/denial.jpg'\n  }\n```\n\n### `serve`\n\n**Type:** string, function or Array\n\nSpecify one of below or an Array which includes multiple things of those.  \nBy default, the first file which exists is chosen to try to serve. See [force](#force). If anything doesn't exist, it goes to next an Alias-Rule. If all files of Alias-Rules don't exist, it tries to serve the requested file.\n\n+ **string:**\n\nThe absolute path or relative path from the document-root of the file to serve.  \nThis can include parameters like `<% parameter %>`. See [Parameters](#parameters).\n\n```js\n  // directoryIndex isn't index.html\n  alias: {\n    match: /\\/$/,\n    serve: '<% absPath %>/default.html'\n  }\n```\n\n*NOTE:* If the first character of this string is `/` (it might be parameter), this string is absolute path. This `/` doesn't point the document-root. It is the root of the local filesystem. If you want the relative path from the document-root, don't specify leading `/`, or add `.` to left of leading `/`.\n\n+ **function:**\n\nThe function which returns the absolute path or relative path from the document-root of the file to serve.  \nThe Object which has parameters is passed to this function. See [Parameters](#parameters).\n\n```js\n  // Minified files are not made yet.\n  alias: {\n    match: /\\.min\\.(?:js|css)$/,\n    serve: function(params) {\n      return params.absDir + '/' +\n        params.basename.replace(/\\.min$/, '.') + params.suffix;\n    }\n  }\n```\n\n```js\n  // Compile unwatched SASS now.\n  alias: {\n    match: 'suffix=css',\n    serve: function(params) {\n      require('exec-sync')('sass ' +\n        params.absDir + '/' + params.basename + '.scss:' + params.absPath);\n      return params.absPath;\n    }\n  }\n```\n\n### `force`\n\n**Type:** boolean\n\nIf `true` is specified, the first file in the [`serve`](#serve) is chosen to try to serve without checking it's existing or not. And if it doesn't exist, a 404 error occurs. Default is `false`.  \nThis is used to prevent another file from being chosen unintentionally.\n\n### `allowOutside`\n\nIf `true` is specified, serving the outside files of the document-root is allowed. Default is `false`.\n\n```js\n  // Shared files.\n  alias: {\n    match: /^\\/common_lib/,\n    serve: '/path/to/lib/<% fileName %>',\n    allowOutside: true\n  }\n```\n\n*NOTE:* If you specify `true` in the public server, you should specify the absolute path to the [`serve`](#serve). Otherwise the user might access to the file that must be hidden from them.\n\n## Parameters\n\nThe string `parameter=value` can be specified to the [`match`](#match). And the Object which has parameters is passed to function which specified to the [`match`](#match) and the [`serve`](#serve).  \nThese parameters are below.\n\n+ `reqPath`  \nThe path which is requested by the user. e.g. `/path/to/file.ext`  \nThis might be a directory. e.g. `/`\n+ `reqDir`  \nThe path to a directory which is part of `reqPath`. e.g. `/path/to`  \n+ `absPath`  \nThe absolute path to a requested file. e.g. `/var/www/public/path/to/file.ext`  \n+ `absDir`  \nThe absolute path to a directory which is part of `absPath`. e.g. `/var/www/public/path/to`  \n+ `fileName`  \nThe file name of a requested file. e.g. `file.ext`  \nThis might be a directory name e.g. `to`  \nIf the document-root is requested, this is empty string.\n+ `basename`  \nThe part of the file name except file-suffix. (`.` isn't included) e.g. `file`\n+ `suffix`  \nThe part of the file name which is extracted file-suffix. (`.` isn't included) e.g. `ext`\n+ Request Headers  \nThe HTTP Request Headers from the client. These are lower-cased. e.g. `referer`, `user-agent`, etc.\n\n## Logging\n\nThe `logger` included in constructor options is a Logger instance of the standard Logging Library (e.g. [log4js](https://github.com/nomiddlename/log4js-node)) which has `info` method or `log` method.\n\n```js\nvar log4js = require('log4js');\nvar logger = log4js.getLogger('node-static-alias');\nlogger.setLevel(log4js.levels.INFO);\n\nvar fileServer = new staticAlias.Server('./public' {\n  alias: { ... },\n  logger: logger\n});\n```\n\nYou can specify a simple Object which has `info` method or `log` method (e.g. `console` or `util`).  \nMost easy:\n\n```js\nvar fileServer = new staticAlias.Server('./public' {\n  alias: { ... },\n  logger: console\n  //logger: require('util') // Add timestamp\n});\n```\n\nAdd project name: (But, you probably use your favorite library.)\n\n```js\nvar fileServer = new staticAlias.Server('./public' {\n  alias: { ... },\n  logger: {log: function() {\n    var util = require('util');\n    console.log('[node-static-alias] ' +  util.format.apply(util, arguments));\n  }}\n});\n```\n\nLog message example:\n\n```console\n(/) Requested: \"/var/public\"\n(/file.min.css) Requested: \"/var/public/file.min.css\"\n(/file.min.css) For Serve: \"/var/public/file.css\" alias[3] match[1] serve[0]\n(/file.min.js) Requested: \"/var/public/file.min.js\"\n(/file.min.js) For Serve: \"/var/public/file.js\" alias[2] match[0] serve[1]\n```\n\nThe `(path)` is the path which is requested by the user. The `[number]` means an index of an Array.\n","maintainers":[{"name":"anseki","email":"AnSeki.aff@gmail.com"}],"time":{"modified":"2015-05-28T06:04:55.312Z","created":"2013-12-29T14:57:10.065Z","0.1.0":"2013-12-29T14:57:11.309Z","0.1.1":"2014-06-26T23:53:43.905Z","0.1.2":"2014-10-23T20:28:56.046Z","0.1.3":"2015-05-28T06:04:55.312Z"},"author":{"name":"anseki","url":"https://github.com/anseki"},"repository":{"type":"git","url":"git://github.com/anseki/node-static-alias.git"},"homepage":"https://github.com/anseki/node-static-alias","keywords":["http","httpd","test","static","file","server","alias","mod_rewrite","directoryindex","min","log"],"bugs":{"url":"https://github.com/anseki/node-static-alias/issues"},"readmeFilename":"README.md","users":{"azaslavsky":true},"license":"MIT","_attachments":{}}